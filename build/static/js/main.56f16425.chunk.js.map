{"version":3,"sources":["pages/Home.js","assets/images/google-icon.png","utility/api.js","utility/ToolFct.js","context/AuthContext.js","context/CalendarContext.js","utility/FetchFct.js","components/Modal/Modal.js","pages/Login.js","utility/dataModel/AppointmentDM.js","components/Notification/Notification.js","components/AppointmentForm/AppointmentForm.js","components/Scheduler/Scheduler.js","components/Layout/Sidebar.js","components/Layout/Layout.js","pages/Calendar.js","pages/Users.js","pages/Settings.js","pages/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useEffect","promise1","Promise","resolve","reject","promise2","promise3","all","then","values","console","log","className","href","target","rel","src","alt","config","api","IsEmpty","str","undefined","IsArrayEmpty","arr","ret","Array","isArray","length","formatDateYYYYMMDD","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","removeKeyFromObject","obj","arrayOfKey","objToFilter","forEach","element","convertTimeTo12Hours","time","toString","match","slice","validateFields","form","inputs","getElementsByTagName","selects","textareas","checklist","el","isValid","i","checkValidity","required","classList","remove","add","AuthContext","createContext","AuthProvider","props","useState","isLoggedIn","setIsLoggedIn","children","payload","Provider","value","defaultProps","CalendarContext","CalendarProvider","calendarEvents","setCalendarEvents","userName","userImg","userEmail","userInfo","setUserInfo","ApiCalendar","onLoad","getUserInfo","listenSign","getAllEvents","response","getBasicUserProfile","getName","getImageUrl","getEmail","email","googleData","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","googleEmail","redirect","fetch","json","result","dataArray","map","val","key","title","startTime","endTime","startDate","toISOString","endDate","push","apiData","catch","error","registerUser","data","getDetailsByGmail","getUserListByType","type","Modal","ref","modal","React","createRef","buttonText","hideButton","useImperativeHandle","toggleFromParent","document","querySelector","style","display","Fragment","id","onClick","current","width","textAlign","forwardRef","Login","firstName","lastName","profileImage","moveToCalendar","setMoveToCalendar","history","useContext","ModalREF","useRef","loginGoogleEvent","submitForm","a","isActive","alert","gmail","getGivenName","getFamilyName","logo","e","handleAuthClick","name","onChange","handleChange","disabled","selected","withRouter","AppointmentDM","_id","googleCalendarId","userId","puTime","doTime","driver","puLocation","instructor","vehicle","status","instrunctionOne","instructionTwo","notes","createdAt","this","Notification","isNotificationShow","message","notification","setNotification","success","msg","notificationShowHide","setTimeout","formatedDate","AppointmentForm","setInstructors","fields","setFields","selectedDate","formData","isVisbleFunction","appointmentFormREF","getAllInstructors","upsertFromParents","res","sign","deleteForm","instructorsLists","deleteEvent","text","url","appointMentModel","readFromObj","startDateTime","endDateTime","eventToGoogle","summary","start","dateTime","end","createEvent","googleRes","raw","upsertForm","updateEvent","timerPickerChange","getPickerHours","getHours","getPickerMinutes","getMinutes","HHMM","parseInt","replace","color","defaultValue","placeholderText","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","dateFormat","filterTime","currentDate","getTime","SchedulerTable","hasDeleteBtn","setHasDeleteBtn","isAppointmentFormVisble","setIsAppointmentFormVisble","schedulerData","upsertButton","setVisibility","Paper","startDayHour","endDayHour","appointmentComponent","restProps","Appointment","backgroundColor","borderRadius","fontSize","padding","QueryBuilder","float","marginRight","Create","Person","contentComponent","classColor","appointmentData","marginLeft","margin","marginBottom","FiberManualRecord","borderBottom","paddingBottom","EventAvailable","toDateString","Remove","DriveEta","LocationOn","List","showCloseButton","showOpenButton","visible","onVisibilityChange","basicLayoutComponent","Object","keys","commandLayoutComponent","background","height","Sidebar","activeStyle","sidebarREF","window","innerWidth","to","border","localStorage","clear","handleSignoutClick","location","Layout","Calendar","statusIcon","maxHeight","colSpan","Users","instructors","students","setStudents","fetchUsers","getInstructors","getStudents","parse","upsertUser","onError","onerror","Settings","Profile","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.56f16425.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nexport default function Home() {\r\n  useEffect(() => {\r\n    const promise1 = new Promise((resolve, reject) => {\r\n      resolve(1);\r\n    });\r\n\r\n    const promise2 = new Promise((resolve, reject) => {\r\n      resolve(2);\r\n    });\r\n\r\n    const promise3 = new Promise((resolve, reject) => {\r\n      resolve(3);\r\n    });\r\n\r\n    Promise.all([promise1, promise2, promise3]).then((values) => {\r\n      console.log(values)\r\n    });\r\n  })\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <main>\r\n        <h1 className=\"title\">\r\n          Welcome to\r\n          <a href=\"https://nextjs.org\">School Driving Scheduler!</a>\r\n        </h1>\r\n\r\n        <div className=\"grid\">\r\n          <a\r\n            href=\"https://nextjs.org/docs\"\r\n            className=\"card\"\r\n          >\r\n            <h3>Documentation &rarr;</h3>\r\n            <p>Find in-depth information about this app.</p>\r\n          </a>\r\n\r\n          <a\r\n            href=\"/calendar\"\r\n            className=\"card\"\r\n          >\r\n            <h3>Calendar &rarr;</h3>\r\n            <p>Find in-depth information client schedules.</p>\r\n          </a>\r\n        </div>\r\n      </main>\r\n\r\n      <footer>\r\n        <a\r\n          href=\"https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Powered by\r\n          {' '}\r\n          <img src=\"/vercel.svg\" alt=\"Vercel\" className=\"logo\" />\r\n        </a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/google-icon.6bc7d493.png\";","const config = {\r\n  // api: 'http://localhost:4040/api/'\r\n  api: 'https://mini-project-v1.herokuapp.com/api/'\r\n};\r\n\r\nexport default config;\r\n","function IsEmpty(str) {\r\n  return str === undefined || str === null || str === '';\r\n}\r\n\r\nfunction IsArrayEmpty(arr) {\r\n  let ret = true;\r\n\r\n  if (Array.isArray(arr)) ret = arr.length === 0;\r\n\r\n  return ret\r\n}\r\n\r\nfunction IsObjEmpty(obj) {\r\n  return obj === null || obj === undefined || Object.keys(obj).length === 0;\r\n}\r\n\r\nfunction formatDateYYYYMMDD(date) {\r\n  const d = new Date(date);\r\n  let month = `${(d.getMonth() + 1)}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) {\r\n    month = `0${month}`;\r\n  }\r\n  if (day.length < 2) {\r\n    day = `0${day}`;\r\n  }\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nfunction removeKeyFromObject(obj, arrayOfKey) {\r\n  const objToFilter = obj\r\n  arrayOfKey.forEach((element) => {\r\n    delete objToFilter[element];\r\n  });\r\n  return objToFilter\r\n}\r\n\r\nfunction addDays(date, days) {\r\n  const result = new Date(date);\r\n  result.setDate(result.getDate() + days);\r\n  return result;\r\n}\r\n\r\nfunction convertTimeTo12Hours(time) {\r\n  // Check correct time format and split into components\r\n  time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n  if (time.length > 1) { // If time format correct\r\n    time = time.slice(1); // Remove full string match value\r\n    time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n    time[0] = +time[0] % 12 || 12; // Adjust hours\r\n  }\r\n  return time.join(''); // return adjusted time or original string\r\n}\r\n\r\nfunction isValidUrl(str) {\r\n  const pattern = new RegExp('^(https?:\\\\/\\\\/)?((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*(\\\\?[;&a-z\\\\d%_.~+=-]*)?(\\\\#[-a-z\\\\d_]*)?$', 'i')\r\n  return !!pattern.test(str);\r\n}\r\n\r\nfunction validateFields(form) {\r\n  const inputs = form.getElementsByTagName('input');\r\n  const selects = form.getElementsByTagName('select');\r\n  const textareas = form.getElementsByTagName('textarea');\r\n\r\n  const checklist = [...inputs, ...selects, ...textareas];\r\n  let ret = true\r\n  let el = [];\r\n  let isValid = false;\r\n\r\n  for (let i = 0; i < checklist.length; i += 1) {\r\n    el = checklist[i]\r\n    isValid = el.checkValidity();\r\n\r\n    if (el.required) {\r\n      if (isValid) {\r\n        el.classList.remove('invalid-border')\r\n      } else {\r\n        el.classList.add('invalid-border')\r\n        ret = false\r\n      }\r\n    } else {\r\n      el.classList.remove('invalid-border')\r\n    }\r\n  }\r\n\r\n  return ret\r\n}\r\n\r\nexport {\r\n  IsEmpty,\r\n  IsArrayEmpty,\r\n  IsObjEmpty,\r\n  formatDateYYYYMMDD,\r\n  removeKeyFromObject,\r\n  isValidUrl,\r\n  addDays,\r\n  validateFields,\r\n  convertTimeTo12Hours\r\n}\r\n","import React, {\r\n  useState,\r\n  createContext,\r\n  useEffect\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport config from '../utility/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = (props) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n  const { children } = props\r\n  useEffect(() => {\r\n  });\r\n\r\n  const payload = {\r\n    isLoggedIn,\r\n    setIsLoggedIn,\r\n  };\r\n\r\n  return <AuthContext.Provider value={payload}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nAuthProvider.defaultProps = {};\r\n\r\nAuthProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, {\r\n  useState,\r\n  createContext,\r\n  useEffect\r\n} from 'react';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport PropTypes from 'prop-types';\r\nimport config from '../utility/api';\r\nimport { IsEmpty } from '../utility/ToolFct';\r\n\r\nexport const CalendarContext = createContext();\r\n\r\nconst CalendarProvider = (props) => {\r\n  const [calendarEvents, setCalendarEvents] = useState()\r\n  const [userInfo, setUserInfo] = useState({ userName: '', userImg: '', userEmail: '' })\r\n\r\n  const { children } = props\r\n\r\n  useEffect(() => {\r\n    ApiCalendar.onLoad(() => {\r\n      getUserInfo()\r\n      ApiCalendar.listenSign(getUserInfo);\r\n      getAllEvents()\r\n    });\r\n  }, []);\r\n\r\n  const getUserInfo = () => {\r\n    const response = ApiCalendar.getBasicUserProfile()\r\n    if (!IsEmpty(response)) {\r\n      setUserInfo({\r\n        userName: response.getName(),\r\n        userImg: response.getImageUrl(),\r\n        userEmail: response.getEmail(),\r\n      })\r\n    }\r\n  }\r\n\r\n  const getAllEvents = (email) => {\r\n    const googleData = ApiCalendar.getBasicUserProfile()\r\n\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n\r\n    const raw = JSON.stringify({\r\n      googleEmail: googleData.getEmail()\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.api}appointments/gmail`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        const dataArray = []\r\n        result.map((val, key) => {\r\n          const {\r\n            title,\r\n            date,\r\n            startTime,\r\n            endTime\r\n          } = val\r\n          const startDate = new Date(`${date} ${startTime}`).toISOString()\r\n          const endDate = new Date(`${date} ${endTime}`).toISOString()\r\n\r\n          dataArray.push({\r\n            apiData: val,\r\n            title,\r\n            startDate,\r\n            endDate\r\n          })\r\n        })\r\n\r\n        setCalendarEvents(dataArray)\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n  }\r\n\r\n  const payload = {\r\n    calendarEvents,\r\n    getAllEvents,\r\n    getUserInfo,\r\n    userInfo\r\n  };\r\n\r\n  return <CalendarContext.Provider value={payload}>{children}</CalendarContext.Provider>;\r\n};\r\n\r\nCalendarProvider.defaultProps = {};\r\n\r\nCalendarProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default CalendarProvider;\r\n","import config from './api';\r\n\r\nfunction getData(url) {\r\n  return fetch(`${config.api}${url}`)\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      return result\r\n    })\r\n    .catch((error) => console.log('error', error));\r\n}\r\n\r\nfunction registerUser(data) {\r\n  const myHeaders = new Headers();\r\n  myHeaders.append('Content-Type', 'application/json');\r\n\r\n  const raw = JSON.stringify(data);\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: 'follow'\r\n  };\r\n\r\n  return fetch(`${config.api}users/register`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      return result\r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n    });\r\n}\r\n\r\nfunction getDetailsByGmail(email) {\r\n  const myHeaders = new Headers();\r\n  myHeaders.append('Content-Type', 'application/json');\r\n\r\n  const raw = JSON.stringify({ email });\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: 'follow'\r\n  };\r\n\r\n  return fetch(`${config.api}users/profile`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      return result\r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n    });\r\n}\r\n\r\nfunction getUserListByType(type) {\r\n  const myHeaders = new Headers();\r\n  myHeaders.append('Content-Type', 'application/json');\r\n\r\n  const raw = JSON.stringify({ type });\r\n\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: 'follow'\r\n  };\r\n\r\n  return fetch(`${config.api}users/type`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      return result\r\n    })\r\n    .catch((error) => {\r\n      throw error\r\n    });\r\n}\r\n\r\nexport {\r\n  getData,\r\n  getDetailsByGmail,\r\n  registerUser,\r\n  getUserListByType\r\n}\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle\r\n} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './modal.style.scss'\r\n\r\nfunction Modal(props, ref) {\r\n  const modal = React.createRef();\r\n\r\n  const { buttonText, children, hideButton } = props\r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    toggleFromParent() {\r\n      document.querySelector('.modal').style.display = 'block'\r\n    }\r\n  }), [])\r\n\r\n  const modalToggle = () => {\r\n    modal.current.style.display = 'block'\r\n  }\r\n\r\n  const closeModal = () => {\r\n    modal.current.style.display = 'none'\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    {\r\n      !hideButton\r\n      && (\r\n      <button\r\n        type=\"button\"\r\n        id=\"myBtn\"\r\n        onClick={modalToggle}\r\n      >\r\n        {buttonText}\r\n      </button>\r\n      )\r\n    }\r\n      <div\r\n        className=\"modal\"\r\n        ref={modal}\r\n      >\r\n        <div className=\"modal-content\">\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              textAlign: 'right'\r\n            }}\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              onClick={closeModal}\r\n            >\r\n              &times;\r\n            </button>\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  buttonText: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n  hideButton: PropTypes.bool,\r\n};\r\n\r\nModal.defaultProps = {\r\n  buttonText: {},\r\n  hideButton: false,\r\n}\r\n\r\nexport default forwardRef(Modal)\r\n","import React, {\r\n  useContext,\r\n  useState,\r\n  Fragment,\r\n  useEffect,\r\n  useRef\r\n} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport { withRouter } from 'react-router-dom';\r\nimport logo from '../assets/images/google-icon.png'\r\n\r\nimport config from '../utility/api';\r\nimport UserDM from '../utility/dataModel/UserDm';\r\nimport { IsArrayEmpty, IsEmpty, validateFields } from '../utility/ToolFct';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { CalendarContext } from '../context/CalendarContext';\r\nimport { getDetailsByGmail, registerUser } from '../utility/FetchFct';\r\n\r\nimport Modal from '../components/Modal/Modal';\r\n\r\nfunction Login(props) {\r\n  const [userInfo, setUserInfo] = useState({\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    profileImage: '',\r\n    type: ''\r\n  })\r\n  const [moveToCalendar, setMoveToCalendar] = useState(false);\r\n  const { history } = props\r\n  const { getAllEvents } = useContext(CalendarContext)\r\n  const ModalREF = useRef();\r\n\r\n  useEffect(() => {\r\n    ApiCalendar.onLoad(() => {\r\n      ApiCalendar.listenSign(loginGoogleEvent);\r\n      // loginGoogleEvent()\r\n    });\r\n  })\r\n\r\n  const submitForm = async () => {\r\n    const register = await registerUser(userInfo)\r\n    if (!IsEmpty(register.isActive)) {\r\n      getAllEvents()\r\n      history.push('/calendar');\r\n    } else {\r\n      alert('Something went wrong.')\r\n    }\r\n  }\r\n\r\n  const loginGoogleEvent = async () => {\r\n    const response = await ApiCalendar.getBasicUserProfile()\r\n    if (!IsEmpty(response)) {\r\n      const gmail = response.getEmail();\r\n      const getDetails = await getDetailsByGmail(gmail)\r\n\r\n      if (!IsEmpty(getDetails.isActive)) {\r\n        getAllEvents()\r\n        history.push('/calendar');\r\n      } else {\r\n        setUserInfo({\r\n          email: response.getEmail(),\r\n          firstName: response.getGivenName(),\r\n          lastName: response.getFamilyName(),\r\n          profileImage: response.getImageUrl(),\r\n          type: ''\r\n        })\r\n        ModalREF.current.toggleFromParent()\r\n      }\r\n    } else {\r\n      console.log('error')\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setUserInfo({\r\n      ...userInfo,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"twelve columns\">\r\n          <form className=\"loginForm\">\r\n            <div className=\"form\">\r\n              <div className=\"row\">\r\n                <div className=\"twelve column\">\r\n                  <img className=\"google-logo\" src={(logo)} alt=\"google-logo\" />\r\n                  <h4>Login</h4>\r\n                  <p>Use your Google Account</p>\r\n                </div>\r\n                <div className=\"twelve column\">\r\n                  <button\r\n                    className=\"button-danger loginBtn\"\r\n                    type=\"button\"\r\n                    onClick={(e) => {\r\n                      ApiCalendar.handleAuthClick();\r\n                      setMoveToCalendar(true)\r\n                      loginGoogleEvent()\r\n                    }}\r\n                  >\r\n                    {moveToCalendar ? '' : 'Sign in to Google'}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal ref={ModalREF} hideButton>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h5>We see you are new to the app we will be creating your Profile</h5>\r\n\r\n              <select\r\n                className=\"u-full-width\"\r\n                name=\"type\"\r\n                required\r\n                onChange={(e) => handleChange(e)}\r\n              >\r\n                <option disabled selected value=\"\">Please select your role</option>\r\n                <option value=\"Student\">Student</option>\r\n                <option value=\"Instructor\">Instructor</option>\r\n              </select>\r\n\r\n              <input\r\n                className=\"button-primary\"\r\n                type=\"button\"\r\n                value=\"Register\"\r\n                onClick={() => submitForm()}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nLogin.defaultProps = {\r\n  history: {}\r\n}\r\n\r\nLogin.propTypes = {\r\n  history: PropTypes.objectOf(PropTypes.string),\r\n};\r\n\r\nexport default withRouter(Login)\r\n","export default class AppointmentDM {\r\n  _id = ''\r\n  googleEmail = ''\r\n  googleCalendarId = ''\r\n  userId = ''\r\n  title = ''\r\n  date = ''\r\n  startTime = ''\r\n  puTime = ''\r\n  endTime = ''\r\n  doTime = ''\r\n  driver = ''\r\n  type = ''\r\n  puLocation = ''\r\n  instructor = ''\r\n  vehicle = ''\r\n  status = ''\r\n  instrunctionOne = ''\r\n  instructionTwo = ''\r\n  notes = ''\r\n  createdAt = ''\r\n\r\n  readFromObj(obj) {\r\n    this._id = obj._id\r\n    this.userId = obj.userId\r\n    this.googleEmail = obj.googleEmail\r\n    this.googleCalendarId = obj.googleCalendarId\r\n    this.title = obj.title\r\n    this.date = obj.date\r\n    this.startTime = obj.startTime\r\n    this.puTime = obj.puTime\r\n    this.endTime = obj.endTime\r\n    this.doTime = obj.doTime\r\n    this.driver = obj.driver\r\n    this.type = obj.type\r\n    this.puLocation = obj.puLocation\r\n    this.instructor = obj.instructor\r\n    this.vehicle = obj.vehicle\r\n    this.status = obj.status\r\n    this.instrunctionOne = obj.instrunctionOne\r\n    this.instructionTwo = obj.instructionTwo\r\n    this.notes = obj.notes\r\n    this.createdAt = obj.createdAt\r\n  }\r\n}\r\n","import React, { useState, useImperativeHandle, forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './notification.styles.scss';\r\n\r\nfunction Notification(props, ref) {\r\n  const [notification, setNotification] = useState({ isNotificationShow: false, message: '', type: 'succes' })\r\n\r\n  useImperativeHandle(ref, () => ({ success, error }))\r\n\r\n  const success = (msg) => {\r\n    notificationShowHide('succes', msg)\r\n  }\r\n  const error = (msg) => {\r\n    notificationShowHide('error', msg)\r\n  }\r\n\r\n  const notificationShowHide = (status, msg) => {\r\n    setNotification({\r\n      message: msg,\r\n      type: status,\r\n      isNotificationShow: true\r\n    })\r\n    setTimeout(() => {\r\n      setNotification({\r\n        message: msg,\r\n        type: status,\r\n        isNotificationShow: false\r\n      })\r\n    }, 3000)\r\n  }\r\n  return (\r\n    <div className={`notification ${notification.isNotificationShow ? 'show' : 'hide'}`}>\r\n      <span className={`alert ${notification.type === 'succes' ? 'alert-success' : 'alert-danger'}`}>\r\n        {notification.message}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nNotification.propTypes = {\r\n};\r\nNotification.defaultProps = {\r\n}\r\nexport default forwardRef(Notification)\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n  useContext,\r\n  createRef\r\n} from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport DatePicker from 'react-datepicker'\r\n\r\nimport config from '../../utility/api';\r\nimport AppointmentDM from '../../utility/dataModel/AppointmentDM';\r\nimport {\r\n  addDays,\r\n  formatDateYYYYMMDD,\r\n  IsEmpty,\r\n  removeKeyFromObject,\r\n  validateFields\r\n} from '../../utility/ToolFct';\r\n\r\nimport { CalendarContext } from '../../context/CalendarContext';\r\nimport Notification from '../Notification/Notification';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { getDetailsByGmail, getUserListByType } from '../../utility/FetchFct';\r\n\r\nconst formatedDate = formatDateYYYYMMDD(new Date())\r\n\r\nfunction AppointmentForm(props, ref) {\r\n  const [instructors, setInstructors] = useState([])\r\n  const [fields, setFields] = useState();\r\n  const { selectedDate, formData, isVisbleFunction } = props\r\n  const { getAllEvents } = useContext(CalendarContext)\r\n  const notification = useRef(null);\r\n  const appointmentFormREF = useRef();\r\n\r\n  useEffect(() => {\r\n    setFields({\r\n      ...formData,\r\n      date: selectedDate\r\n    })\r\n\r\n    getAllInstructors()\r\n  }, [formData, selectedDate])\r\n\r\n  useImperativeHandle((ref), () => ({\r\n    upsertFromParents(res) {\r\n      if (ApiCalendar.sign) {\r\n        res === 'edit' ? submitForm() : deleteForm()\r\n      } else {\r\n        ApiCalendar.handleAuthClick()\r\n      }\r\n    }\r\n  }))\r\n\r\n  const getAllInstructors = async () => {\r\n    const instructorsLists = await getUserListByType('Instructor')\r\n    setInstructors(instructorsLists)\r\n  }\r\n\r\n  const filterPassedTime = (time) => {\r\n    const currentDate = new Date(`${formatedDate} ${fields.startTime}`);\r\n    const endDate = new Date(time);\r\n\r\n    return currentDate.getTime() < endDate.getTime();\r\n  };\r\n\r\n  const deleteForm = () => {\r\n    const { _id, googleCalendarId } = fields\r\n\r\n    if (!IsEmpty(_id) && !IsEmpty(googleCalendarId)) {\r\n      const requestOptions = {\r\n        method: 'DELETE',\r\n        redirect: 'follow'\r\n      };\r\n\r\n      ApiCalendar\r\n        .deleteEvent(googleCalendarId)\r\n        .then(() => {\r\n          notification.current.success('Delete from Google calendar')\r\n          fetch(`${config.api}appointments/${_id}`, requestOptions)\r\n            .then((response) => response.text())\r\n            .then(() => {\r\n              notification.current.success('Delete from Api')\r\n              getAllEvents()\r\n              isVisbleFunction()\r\n            })\r\n            .catch((error) => console.log('error', error));\r\n        });\r\n    }\r\n  }\r\n\r\n  const submitForm = async () => {\r\n    const {\r\n      _id,\r\n    } = fields\r\n\r\n    const div = appointmentFormREF.current\r\n    if (!validateFields(div)) {\r\n      return false\r\n    }\r\n\r\n    let method = 'POST'\r\n    let url = `${config.api}appointments/`;\r\n\r\n    if (!IsEmpty(_id)) {\r\n      method = 'PUT'\r\n      url = `${config.api}appointments/${_id}`\r\n    }\r\n    const googleData = ApiCalendar.getBasicUserProfile()\r\n\r\n    const appointMentModel = new AppointmentDM()\r\n\r\n    appointMentModel.readFromObj(fields)\r\n\r\n    const getDetails = await getDetailsByGmail(appointMentModel.instructor)\r\n\r\n    appointMentModel.googleEmail = googleData.getEmail()\r\n    appointMentModel.userId = googleData.getEmail()\r\n\r\n    removeKeyFromObject(appointMentModel, ['_id', 'createdAt'])\r\n    const startDateTime = new Date(`${appointMentModel.date} ${appointMentModel.startTime}`).toISOString();\r\n    const endDateTime = new Date(`${appointMentModel.date} ${appointMentModel.endTime}`).toISOString();\r\n\r\n    const eventToGoogle = {\r\n      summary: appointMentModel.title,\r\n      start: {\r\n        dateTime: new Date(startDateTime).toISOString(),\r\n      },\r\n      end: {\r\n        dateTime: new Date(endDateTime).toISOString()\r\n      }\r\n    };\r\n\r\n    if (method === 'POST') {\r\n      ApiCalendar.createEvent(eventToGoogle)\r\n        .then((googleRes) => {\r\n          const { result } = googleRes\r\n          const raw = JSON.stringify({\r\n            ...appointMentModel,\r\n            googleCalendarId: result.id\r\n          });\r\n          upsertForm(url, raw, method)\r\n        })\r\n        .catch((error) => {\r\n          notification.current.error(error.result.error.message)\r\n        });\r\n    } else {\r\n      ApiCalendar.updateEvent(eventToGoogle, appointMentModel.googleCalendarId)\r\n        .then((googleRes) => {\r\n          notification.current.success('Update Data to Google calendar')\r\n          const raw = JSON.stringify({\r\n            ...appointMentModel,\r\n          });\r\n          upsertForm(url, raw, method)\r\n        }).catch((error) => {\r\n          notification.current.error(error.result.error.message)\r\n        });\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const upsertForm = (url, raw, method) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n\r\n    const requestOptions = {\r\n      method,\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch(url, requestOptions)\r\n      .then((response) => response.text())\r\n      .then((res) => {\r\n        // window.location.reload()\r\n        getAllEvents()\r\n        isVisbleFunction()\r\n      })\r\n      .catch((error) => console.log('error', error));\r\n  }\r\n\r\n  const timerPickerChange = (e, key) => {\r\n    let getPickerHours = new Date(e).getHours()\r\n    let getPickerMinutes = new Date(e).getMinutes()\r\n\r\n    if (getPickerHours < 10) {\r\n      getPickerHours = `0${getPickerHours}`\r\n    }\r\n\r\n    if (getPickerMinutes < 10) {\r\n      getPickerMinutes = `0${getPickerMinutes}`\r\n    }\r\n\r\n    const HHMM = `${getPickerHours}:${getPickerMinutes}`\r\n    setFields({\r\n      ...fields,\r\n      [key]: HHMM\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n\r\n    if (name === 'endTime') {\r\n      const startTime = parseInt(fields.startTime.replace(/:/g, ''), 10)\r\n      const endTime = parseInt(value.replace(/:/g, ''), 10)\r\n      if (startTime > endTime) {\r\n        alert('Please select another time.')\r\n      } else {\r\n        setFields({\r\n          ...fields,\r\n          [name]: value\r\n        })\r\n      }\r\n    } else {\r\n      setFields({\r\n        ...fields,\r\n        [name]: value\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form\r\n      ref={appointmentFormREF}\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"twelve column\">\r\n          <h4>Appointment Form</h4>\r\n        </div>\r\n        <Notification ref={notification} />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n          <label>\r\n            Title\r\n            {' '}\r\n            <span style={{ color: 'red' }}>*</span>\r\n          </label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            defaultValue={formData.title}\r\n            onChange={(e) => handleChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n          <label>\r\n            Date\r\n            {' '}\r\n            <span style={{ color: 'red' }}>*</span>\r\n          </label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"date\"\r\n            name=\"date\"\r\n            disabled\r\n            defaultValue={selectedDate}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"six columns\">\r\n          <label>\r\n            Start Time\r\n            {' '}\r\n            <span style={{ color: 'red' }}>*</span>\r\n          </label>\r\n          <DatePicker\r\n            className=\"u-full-width\"\r\n            selected={!IsEmpty(fields) && (!IsEmpty(fields.startTime) && new Date(`${formatedDate} ${fields.startTime}`))}\r\n            placeholderText=\"---\"\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            onChange={(e) => timerPickerChange(e, 'startTime')}\r\n            timeIntervals={15}\r\n            timeCaption=\"Time\"\r\n            dateFormat=\"h:mm  aa\"\r\n          />\r\n        </div>\r\n        <div className=\"six columns\">\r\n          <label>\r\n            PU Time\r\n          </label>\r\n          <DatePicker\r\n            className=\"u-full-width\"\r\n            selected={!IsEmpty(fields) && (!IsEmpty(fields.puTime) && new Date(`${formatedDate} ${fields.puTime}`))}\r\n            placeholderText=\"---\"\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            onChange={(e) => timerPickerChange(e, 'puTime')}\r\n            timeIntervals={15}\r\n            timeCaption=\"Time\"\r\n            dateFormat=\"h:mm  aa\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"six columns\">\r\n          <label>\r\n            End Time\r\n            {' '}\r\n            <span style={{ color: 'red' }}>*</span>\r\n          </label>\r\n          <DatePicker\r\n            className=\"u-full-width\"\r\n            selected={!IsEmpty(fields) && (!IsEmpty(fields.endTime) && new Date(`${formatedDate} ${fields.endTime}`))}\r\n            placeholderText=\"---\"\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            onChange={(e) => timerPickerChange(e, 'endTime')}\r\n            filterTime={filterPassedTime}\r\n            timeIntervals={15}\r\n            timeCaption=\"Time\"\r\n            dateFormat=\"h:mm  aa\"\r\n          />\r\n        </div>\r\n        <div className=\"six columns\">\r\n          <label>\r\n            DO Time\r\n          </label>\r\n          <DatePicker\r\n            className=\"u-full-width\"\r\n            selected={!IsEmpty(fields) && (!IsEmpty(fields.doTime) && new Date(`${formatedDate} ${fields.doTime}`))}\r\n            placeholderText=\"---\"\r\n            showTimeSelect\r\n            showTimeSelectOnly\r\n            onChange={(e) => timerPickerChange(e, 'doTime')}\r\n            timeIntervals={15}\r\n            timeCaption=\"Time\"\r\n            dateFormat=\"h:mm  aa\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"six columns\">\r\n          <label>\r\n            Driver\r\n          </label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"text\"\r\n            name=\"driver\"\r\n            defaultValue={formData.driver}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"six columns\">\r\n          <label>\r\n            Type\r\n          </label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"text\"\r\n            name=\"type\"\r\n            defaultValue={formData.type}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"six columns\">\r\n          <label>\r\n            PU Location\r\n          </label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"text\"\r\n            name=\"puLocation\"\r\n            defaultValue={formData.puLocation}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"six columns\">\r\n          <label>\r\n            Instructor\r\n            {' '}\r\n            <span style={{ color: 'red' }}>*</span>\r\n          </label>\r\n\r\n          {/* <select\r\n            className=\"u-full-width\"\r\n            name=\"instructor\"\r\n            defaultValue={formData.instructor}\r\n            onChange={(e) => handleChange(e)}\r\n            required\r\n          >\r\n            <option disabled selected value=\"\">---</option>\r\n            {\r\n              !IsEmpty(instructors)\r\n              &&instructors.map((val, key) => {\r\n                return (\r\n                  <option value={`${val.firstName} ${val.lastName}`}>\r\n                    {val.firstName}\r\n                    {' '}\r\n                    {val.lastName}\r\n                  </option>\r\n                )\r\n              })\r\n            }\r\n          </select>\r\n        */}\r\n        <input\r\n          className=\"u-full-width\"\r\n          type=\"text\"\r\n          name=\"instructor\"\r\n          defaultValue={formData.instructor}\r\n          onChange={(e) => handleChange(e)}\r\n          required\r\n        />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"six columns\">\r\n          <label>\r\n            Vehicle\r\n          </label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"text\"\r\n            name=\"vehicle\"\r\n            defaultValue={formData.vehicle}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"six columns\">\r\n          <label>\r\n            Status\r\n            {' '}\r\n            <span style={{ color: 'red' }}>*</span>\r\n          </label>\r\n\r\n          <select\r\n            className=\"u-full-width\"\r\n            name=\"status\"\r\n            defaultValue={formData.status}\r\n            onChange={(e) => handleChange(e)}\r\n            required\r\n          >\r\n            <option disabled selected value=\"\">---</option>\r\n            <option value=\"Open\">Open</option>\r\n            <option value=\"In Progress\">In Progress</option>\r\n            <option value=\"Cancelled\">Cancelled</option>\r\n            <option value=\"Confirmed\">Confirmed</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n          <label> Instruction 1 </label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"text\"\r\n            name=\"instrunctionOne\"\r\n            defaultValue={formData.instrunctionOne}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n          <label>Instruction 2</label>\r\n          <input\r\n            className=\"u-full-width\"\r\n            type=\"text\"\r\n            name=\"instructionTwo\"\r\n            defaultValue={formData.instructionTwo}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"twelve columns\">\r\n          <label>Notes</label>\r\n          <textarea\r\n            className=\"u-full-width\"\r\n            name=\"notes\"\r\n            defaultValue={formData.notes}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/*\r\n      <input\r\n        className=\"button-primary\"\r\n        type=\"button\"\r\n        value=\"Submit\"\r\n        onClick={() => submitForm()}\r\n        /> */}\r\n    </form>\r\n  )\r\n}\r\n\r\nAppointmentForm.defaultProps = {\r\n  selectedDate: '',\r\n  formData: {},\r\n  isVisbleFunction: ''\r\n}\r\n\r\nAppointmentForm.propTypes = {\r\n  selectedDate: PropTypes.string,\r\n  formData: PropTypes.objectOf(PropTypes.string),\r\n  isVisbleFunction: PropTypes.func\r\n};\r\n\r\nexport default forwardRef(AppointmentForm)\r\n","import React, {\r\n  Fragment,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useContext\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  QueryBuilder,\r\n  Person,\r\n  Create,\r\n  DriveEta,\r\n  LocationOn,\r\n  List,\r\n  FiberManualRecord,\r\n  Remove,\r\n  EventAvailable\r\n} from '@material-ui/icons';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ViewState } from '@devexpress/dx-react-scheduler';\r\nimport {\r\n  Scheduler,\r\n  DayView,\r\n  MonthView,\r\n  AppointmentTooltip,\r\n  Appointments,\r\n  ViewSwitcher,\r\n  Toolbar,\r\n  DateNavigator,\r\n  AppointmentForm,\r\n  WeekView,\r\n  // ConfirmationDialog,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n\r\nimport ApiCalendar from 'react-google-calendar-api';\r\n\r\nimport AppointmentFormComponent from '../AppointmentForm/AppointmentForm'\r\n\r\nimport './scheduler.styles.css'\r\nimport { convertTimeTo12Hours, formatDateYYYYMMDD, IsObjEmpty } from '../../utility/ToolFct';\r\nimport AppointmentDM from '../../utility/dataModel/AppointmentDM';\r\nimport { CalendarContext } from '../../context/CalendarContext';\r\nimport { getDetailsByGmail } from '../../utility/FetchFct';\r\n\r\nexport default function SchedulerTable(props) {\r\n  const [hasDeleteBtn, setHasDeleteBtn] = useState(false);\r\n  const [isAppointmentFormVisble, setIsAppointmentFormVisble] = useState(false);\r\n\r\n  const { getUserInfo, userInfo } = useContext(CalendarContext)\r\n\r\n  const { schedulerData } = props\r\n  const form = useRef();\r\n\r\n  useEffect(() => { })\r\n\r\n  const AppointmentFormLayout = (data) => {\r\n    const { appointmentData } = data\r\n    const date = appointmentData.startDate\r\n    const selectedDate = formatDateYYYYMMDD(date)\r\n\r\n    let formData = new AppointmentDM()\r\n    if (!IsObjEmpty(appointmentData.apiData)) {\r\n      formData = appointmentData.apiData\r\n      setHasDeleteBtn(true)\r\n    } else {\r\n      setHasDeleteBtn(false)\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container\">\r\n          <AppointmentFormComponent\r\n            ref={form}\r\n            selectedDate={selectedDate}\r\n            formData={formData}\r\n            isVisbleFunction={(e) => { setIsAppointmentFormVisble(false) }}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const CommandButton = () => {\r\n    return (\r\n      <Fragment>\r\n        <div style={{\r\n          width: '100%',\r\n          background: '#fff',\r\n          textAlign: 'right',\r\n          padding: 15,\r\n          height: 30,\r\n        }}\r\n        >\r\n          {hasDeleteBtn && <input id=\"deleteButton\" className=\"button-primary\" type=\"button\" value=\"Delete\" onClick={(e) => upsertButton('delete')} />}\r\n          <input id=\"saveButton\" className=\"button-primary\" type=\"button\" value=\"Submit\" onClick={(e) => upsertButton('edit')} />\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const upsertButton = (str) => {\r\n    form.current.upsertFromParents(str)\r\n  }\r\n\r\n  const Appointment = ({\r\n    // eslint-disable-next-line react/prop-types\r\n    children, style, ...restProps\r\n  }) => {\r\n    const { data } = restProps\r\n    let color;\r\n    switch (data.apiData.status) {\r\n      case 'Open':\r\n        color = '#33b5e5';\r\n        break;\r\n      case 'In Progress':\r\n        color = '#ffbb33';\r\n        break;\r\n      case 'Cancelled':\r\n        color = '#ff3547';\r\n        break;\r\n      case 'Confirmed':\r\n        color = '#00c851';\r\n        break;\r\n      default:\r\n        color = 'pink'\r\n    }\r\n\r\n    return (\r\n      <Appointments.Appointment\r\n        {...restProps}\r\n        style={{\r\n          ...style,\r\n          backgroundColor: color,\r\n          borderRadius: 0,\r\n          fontSize: 14,\r\n          padding: 7,\r\n        }}\r\n      >\r\n        <div style={{ color: '#fff' }}>\r\n          <p className=\"color-white\">\r\n            <b>\r\n              <QueryBuilder\r\n                style={{\r\n                  float: 'left',\r\n                  marginRight: 5,\r\n                }}\r\n              />\r\n              {convertTimeTo12Hours(data.apiData.startTime)}\r\n              {' '}\r\n              -\r\n              {' '}\r\n              {convertTimeTo12Hours(data.apiData.endTime)}\r\n            </b>\r\n          </p>\r\n          <p className=\"color-white\">\r\n            <Create style={{\r\n              float: 'left',\r\n              marginRight: 5,\r\n            }}\r\n            />\r\n            {data.apiData.title}\r\n          </p>\r\n          <p className=\"color-white\">\r\n            <Person style={{\r\n              float: 'left',\r\n              marginRight: 5,\r\n            }}\r\n            />\r\n            {data.apiData.driver || 'N/A'}\r\n          </p>\r\n        </div>\r\n        {/* {children} */}\r\n      </Appointments.Appointment>\r\n    )\r\n  };\r\n\r\n  const setVisibility = async (e) => {\r\n    if (!ApiCalendar.sign) {\r\n      ApiCalendar.handleAuthClick()\r\n      getUserInfo()\r\n    }\r\n\r\n    if (ApiCalendar.sign) {\r\n      // const getDetails = await getDetailsByGmail(userInfo.userEmail)\r\n      // if (getDetails.type !== 'Instructor') {\r\n      setIsAppointmentFormVisble(e)\r\n      // }\r\n    }\r\n  }\r\n  const customTooltip = (e) => {\r\n    let classColor\r\n    switch (e.appointmentData.apiData.status) {\r\n      case 'Open':\r\n        classColor = 'open';\r\n        break;\r\n      case 'In Progress':\r\n        classColor = 'Progress';\r\n        break;\r\n      case 'Cancelled':\r\n        classColor = 'Cancelled';\r\n        break;\r\n      case 'Confirmed':\r\n        classColor = 'Confirmed';\r\n        break;\r\n      default:\r\n    }\r\n\r\n    return (\r\n      <div className=\"popup\">\r\n        <div style={{ marginLeft: 5 }}>\r\n          <h3\r\n            className=\"text-ellipsis\"\r\n            style={{\r\n              margin: 0,\r\n              fontSize: 20,\r\n              marginBottom: 10\r\n            }}\r\n          >\r\n            <FiberManualRecord\r\n              className={classColor}\r\n              style={{\r\n                fontSize: 22,\r\n                float: 'left',\r\n                marginRight: 7,\r\n                color: 'transparent'\r\n              }}\r\n            />\r\n\r\n            {e.appointmentData.apiData.title}\r\n            asd asd asd asd asd asd asd asd asd asd asd asd asd asd asd asd asd asd asd\r\n          </h3>\r\n          <p style={{ marginBottom: 10, borderBottom: '1px solid #EEEE', paddingBottom: 7 }}>\r\n            <EventAvailable\r\n              style={{\r\n                fontSize: 22,\r\n                float: 'left',\r\n                marginRight: 7,\r\n              }}\r\n            />\r\n            {new Date(e.appointmentData.apiData.date).toDateString()}\r\n            {' '}\r\n            <FiberManualRecord style={{ fontSize: 10 }} />\r\n            {' '}\r\n            {convertTimeTo12Hours(e.appointmentData.apiData.startTime)}\r\n            {' '}\r\n            <Remove style={{ fontSize: 10 }} />\r\n            {' '}\r\n            {convertTimeTo12Hours(e.appointmentData.apiData.endTime)}\r\n          </p>\r\n          <p style={{ marginBottom: 10 }}>\r\n            <Person style={{\r\n              fontSize: 22,\r\n              float: 'left',\r\n              marginRight: 7,\r\n            }}\r\n            />\r\n            {e.appointmentData.apiData.driver || 'N/A'}\r\n          </p>\r\n          <p style={{ marginBottom: 10 }}>\r\n            <Person style={{\r\n              fontSize: 22,\r\n              float: 'left',\r\n              marginRight: 7,\r\n            }}\r\n            />\r\n            {e.appointmentData.apiData.instructor}\r\n          </p>\r\n          <p style={{ marginBottom: 10 }}>\r\n            <DriveEta style={{\r\n              fontSize: 22,\r\n              float: 'left',\r\n              marginRight: 7,\r\n            }}\r\n            />\r\n            {e.appointmentData.apiData.vehicle || 'N/A'}\r\n          </p>\r\n          <p style={{ marginBottom: 10 }}>\r\n            <LocationOn style={{\r\n              fontSize: 22,\r\n              float: 'left',\r\n              marginRight: 7,\r\n            }}\r\n            />\r\n            {e.appointmentData.apiData.puLocation || 'N/A'}\r\n          </p>\r\n          <p style={{ marginBottom: 15 }}>\r\n            <List style={{\r\n              fontSize: 22,\r\n              float: 'left',\r\n              marginRight: 7,\r\n            }}\r\n            />\r\n            {e.appointmentData.apiData.type || 'N/A'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Scheduler\r\n          data={schedulerData}\r\n        >\r\n          <ViewState />\r\n          <MonthView />\r\n          <WeekView />\r\n          <DayView\r\n            startDayHour={0}\r\n            endDayHour={24}\r\n          />\r\n          <Appointments appointmentComponent={Appointment} />\r\n          <AppointmentTooltip\r\n            contentComponent={customTooltip}\r\n            showCloseButton\r\n            showOpenButton\r\n          />\r\n          <AppointmentForm\r\n            visible={isAppointmentFormVisble}\r\n            onVisibilityChange={(e) => { setVisibility(e) }}\r\n            basicLayoutComponent={AppointmentFormLayout}\r\n            commandLayoutComponent={CommandButton}\r\n          />\r\n          <Toolbar />\r\n          <DateNavigator />\r\n          <ViewSwitcher />\r\n        </Scheduler>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nSchedulerTable.propTypes = {\r\n  schedulerData: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nSchedulerTable.defaultProps = {\r\n  schedulerData: []\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  Fragment,\r\n  useContext,\r\n  useRef\r\n} from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport ApiCalendar from 'react-google-calendar-api';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './sidebar.style.scss'\r\nimport { IsEmpty } from '../../utility/ToolFct';\r\nimport { CalendarContext } from '../../context/CalendarContext';\r\n\r\nexport default function Sidebar(props) {\r\n  const { userInfo } = useContext(CalendarContext)\r\n  const activeStyle = {\r\n    background: 'linear-gradient(to right, #5772FE , #6D85FB)',\r\n    color: '#fff'\r\n  }\r\n  const sidebarREF = useRef();\r\n\r\n  useEffect(() => {\r\n    console.log(userInfo)\r\n  })\r\n\r\n  const toggleSideBar = () => {\r\n    if (window.innerWidth < 679) {\r\n      const sidebar = sidebarREF.current\r\n      sidebar.style.display = 'block'\r\n    }\r\n  }\r\n\r\n  const closeSidebar = () => {\r\n    if (window.innerWidth < 679) {\r\n      const sidebar = sidebarREF.current\r\n      sidebar.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.clear()\r\n    ApiCalendar.handleSignoutClick()\r\n    window.location.href = '/'\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        ref={sidebarREF}\r\n        className=\"sidebar sidebar-hide-to-small sidebar-shrink sidebar-gestures\"\r\n      >\r\n        <button\r\n          className=\"sidebar-close-btn\"\r\n          type=\"button\"\r\n          onClick={() => closeSidebar()}\r\n        >\r\n          X\r\n        </button>\r\n\r\n        <div className=\"nano\">\r\n          <div className=\"nano-content\">\r\n            <ul>\r\n              <div className=\"logo\">\r\n                <a href=\"index.html\">\r\n                  <img src=\"assets/images/logo.png\" alt=\"\" />\r\n                  <span>SCHOOL</span>\r\n                </a>\r\n              </div>\r\n              <li>\r\n                <NavLink to=\"/calendar\" className=\"sidebar-sub-toggle\" activeStyle={activeStyle}>\r\n                  <i className=\"ti-home\" />\r\n                  Calendar\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/profile\" className=\"sidebar-sub-toggle\" activeStyle={activeStyle}>\r\n                  <i className=\"ti-home\" />\r\n                  Profile\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/user\" className=\"sidebar-sub-toggle\" activeStyle={activeStyle}>\r\n                  <i className=\"ti-home\" />\r\n                  User\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to=\"/settings\" className=\"sidebar-sub-toggle\" activeStyle={activeStyle}>\r\n                  <i className=\"ti-home\" />\r\n                  Settings\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"sidebar-sub-toggle\"\r\n                  style={{\r\n                    border: 0,\r\n                    color: '#fff'\r\n                  }}\r\n                  onClick={(e) => { logout() }}\r\n                >\r\n                  <i className=\"ti-home\" />\r\n                  Logout\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"header\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"float-left\">\r\n                <button\r\n                  className=\"hamburger sidebar-toggle\"\r\n                  onClick={() => toggleSideBar()}\r\n                  type=\"button\"\r\n                >\r\n                  <span className=\"line\" />\r\n                  <span className=\"line\" />\r\n                  <span className=\"line\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"float-right\">\r\n                <div className=\"dropdown dib\">\r\n                  <div className=\"header-icon\" data-toggle=\"dropdown\">\r\n                    {\r\n                      !IsEmpty(userInfo.userName)\r\n                      && (\r\n                        <span className=\"user-avatar\">\r\n                          <img\r\n                            alt=\"profile\"\r\n                            src={`${!IsEmpty(userInfo) && userInfo.userImg}`}\r\n                            style={{ width: 30, height: 30, borderRadius: 30 }}\r\n                          />\r\n                          {' '}\r\n                          {!IsEmpty(userInfo) && userInfo.userName}\r\n                          <i className=\"ti-angle-down f-s-10\" />\r\n                        </span>\r\n                      )\r\n                    }\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n// Sidebar.propTypes = {\r\n//   schedulerData: PropTypes.arrayOf(PropTypes.object),\r\n// };\r\n\r\n// Sidebar.defaultProps = {\r\n//   schedulerData: []\r\n// }\r\n","import React, {\r\n  Fragment\r\n} from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Sidebar from './Sidebar'\r\n\r\nexport default function Layout(props) {\r\n  const { children } = props\r\n\r\n  return (\r\n    <Fragment>\r\n      <Sidebar />\r\n      <div className=\"content-wrap\">\r\n        <div className=\"main\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nLayout.defaultProps = {}\r\n","import React, {\r\n  useEffect,\r\n  Fragment,\r\n  useContext\r\n} from 'react'\r\n\r\nimport ApiCalendar from 'react-google-calendar-api';\r\n\r\nimport SchedulerTable from '../components/Scheduler/Scheduler'\r\nimport Layout from '../components/Layout/Layout';\r\nimport config from '../utility/api';\r\n\r\nimport { CalendarContext } from '../context/CalendarContext';\r\nimport { IsArrayEmpty } from '../utility/ToolFct';\r\n\r\nexport default function Calendar() {\r\n  // Context\r\n  const { calendarEvents, getAllEvents } = useContext(CalendarContext)\r\n\r\n  useEffect(() => {\r\n  });\r\n\r\n  const statusIcon = (status) => {\r\n    let classColor;\r\n    switch (status) {\r\n      case 'Open':\r\n        classColor = 'open';\r\n        break;\r\n      case 'In Progress':\r\n        classColor = 'Progress';\r\n        break;\r\n      case 'Cancelled':\r\n        classColor = 'Cancelled';\r\n        break;\r\n      case 'Confirmed':\r\n        classColor = 'Confirmed';\r\n        break;\r\n      default:\r\n        classColor = 'pink'\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={classColor}\r\n        style={{\r\n          background: classColor,\r\n          color: '#fff',\r\n          textAlign: 'center',\r\n          fontSize: 11,\r\n          width: 65,\r\n        }}\r\n      >\r\n        {status}\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Layout>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3\">\r\n              <div className=\"card\">\r\n                <div className=\"card-title pr\">\r\n                  <h4>All Appointments</h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table student-data-table m-t-20\" style={{ maxHeight: 150 }}>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Status</th>\r\n                          <th>Title</th>\r\n                          <th>Date</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {\r\n                          !IsArrayEmpty(calendarEvents)\r\n                            ? calendarEvents.map((val) => {\r\n                              return (\r\n                                <tr>\r\n                                  <td>\r\n                                    {statusIcon(val.apiData.status)}\r\n                                  </td>\r\n                                  <td><div className=\"text-ellipsis\" style={{ width: 100 }}>{val.apiData.title}</div></td>\r\n                                  <td>{val.apiData.date}</td>\r\n                                </tr>\r\n                              )\r\n                            }) : (\r\n                              <tr>\r\n                                <td className=\"text-center\" colSpan={2}>No data available.</td>\r\n                              </tr>\r\n                            )\r\n                        }\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-9\">\r\n              <div className=\"card\">\r\n                <div className=\"legendCenter\">\r\n                  <ul className=\"legend\">\r\n                    <li>\r\n                      <span className=\"open\" />\r\n                      Open\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"Progress\" />\r\n                      In Progress\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"Cancelled\" />\r\n                      Cancelled\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"Confirmed\" />\r\n                      Confirmed\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <SchedulerTable\r\n                    schedulerData={calendarEvents}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n} from 'react'\r\n\r\nimport Layout from '../components/Layout/Layout'\r\nimport Modal from '../components/Modal/Modal'\r\nimport config from '../utility/api'\r\nimport { getUserListByType } from '../utility/FetchFct'\r\nimport { IsEmpty } from '../utility/ToolFct'\r\n\r\nexport default function Users() {\r\n  const [user, setUsers] = useState([])\r\n  const [instructors, setInstructors] = useState([])\r\n  const [students, setStudents] = useState([])\r\n  const [fields, setFields] = useState();\r\n\r\n  useEffect(() => {\r\n    fetchUsers()\r\n  }, [])\r\n\r\n  const fetchUsers = async () => {\r\n    const getInstructors = await getUserListByType('Instructor')\r\n    const getStudents = await getUserListByType('Student')\r\n\r\n    setInstructors(getInstructors)\r\n    setStudents(getStudents)\r\n  }\r\n\r\n  const upsertUser = () => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n\r\n    const raw = JSON.stringify(fields);\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    fetch(`${config.api}users/register`, requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        const res = JSON.parse(result)\r\n\r\n        if (!IsEmpty(res.error)) {\r\n          alert(res.error)\r\n        } else {\r\n          setFields([])\r\n          fetchUsers()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      });\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setFields({\r\n      ...fields,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <Modal buttonText=\"Add User\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                  <label>First Name</label>\r\n                  <input\r\n                    className=\"u-full-width\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    className=\"u-full-width\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <label>Type</label>\r\n                  <select\r\n                    className=\"u-full-width\"\r\n                    name=\"type\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  >\r\n                    <option value=\"admin\">Admin</option>\r\n                    <option value=\"student\">Student</option>\r\n                    <option value=\"driver\">Driver</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-lg-12\">\r\n                  <label>Email</label>\r\n                  <input\r\n                    className=\"u-full-width\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    className=\"u-full-width\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={(e) => handleChange(e)}\r\n                  />\r\n                </div>\r\n                <input\r\n                  className=\"button-primary\"\r\n                  type=\"button\"\r\n                  value=\"Add User\"\r\n                  onClick={(e) => upsertUser()}\r\n                />\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-title pr\">\r\n                <h4>Instructors</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table student-data-table m-t-20\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        !IsEmpty(instructors)\r\n                        && instructors.map((val, key) => {\r\n                          return (\r\n                            <tr>\r\n                              <td>\r\n                                <img\r\n                                  alt={val.email}\r\n                                  src={val.profileImage}\r\n                                  onError={(e) => { e.target.onerror = null; e.target.src = 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fclipartart.com%2Fimages%2Ffacebook-profile-icon-clipart-7.png&f=1&nofb=1' }}\r\n                                  style={{\r\n                                    width: 30,\r\n                                    height: 30,\r\n                                    borderRadius: 100\r\n                                  }}\r\n                                />\r\n                                {' '}\r\n                                {val.firstName}\r\n                                {' '}\r\n                                {val.lastName}\r\n                              </td>\r\n                              <td>\r\n                                {val.email}\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        })\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-title pr\">\r\n                <h4>Students</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table student-data-table m-t-20\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        !IsEmpty(students)\r\n                        && students.map((val, key) => {\r\n                          return (\r\n                            <tr>\r\n                              <td>\r\n                                <img\r\n                                  alt={val.email}\r\n                                  src={val.profileImage}\r\n                                  onError={(e) => { e.target.onerror = null; e.target.src = 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fclipartart.com%2Fimages%2Ffacebook-profile-icon-clipart-7.png&f=1&nofb=1' }}\r\n                                  style={{\r\n                                    width: 30,\r\n                                    height: 30,\r\n                                    borderRadius: 100\r\n                                  }}\r\n                                />\r\n                                {' '}\r\n                                {val.firstName}\r\n                                {' '}\r\n                                {val.lastName}\r\n                              </td>\r\n                              <td>\r\n                                {val.email}\r\n                              </td>\r\n                            </tr>\r\n                          )\r\n                        })\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\nimport ApiCalendar from 'react-google-calendar-api'\r\nimport Layout from '../components/Layout/Layout'\r\nimport { CalendarContext } from '../context/CalendarContext'\r\nimport config from '../utility/api'\r\nimport { IsEmpty } from '../utility/ToolFct'\r\n\r\nexport default function Settings() {\r\n  const { userInfo, calendarEvents } = useContext(CalendarContext)\r\n\r\n  useEffect(() => {\r\n    console.log(userInfo)\r\n\r\n    const promise1 = new Promise((resolve, reject) => {\r\n      resolve(1);\r\n    });\r\n\r\n    const promise2 = new Promise((resolve, reject) => {\r\n      resolve(2);\r\n    });\r\n\r\n    const promise3 = new Promise((resolve, reject) => {\r\n      resolve(3);\r\n    });\r\n\r\n    Promise.all([promise1, promise2, promise3]).then((values) => {\r\n      console.log(values)\r\n    })\r\n  })\r\n\r\n  const deactivateAccount = () => {\r\n    localStorage.clear()\r\n    ApiCalendar.handleSignoutClick()\r\n    window.location.href = '/'\r\n  }\r\n\r\n  const deleteForm = (id, googleCalendarId) => {\r\n    // if (!IsEmpty(id) && !IsEmpty(googleCalendarId)) {\r\n    //   const requestOptions = {\r\n    //     method: 'DELETE',\r\n    //     redirect: 'follow'\r\n    //   };\r\n\r\n    //   ApiCalendar\r\n    //     .deleteEvent(googleCalendarId)\r\n    //     .then(() => {\r\n    //       fetch(`${config.api}appointments/${id}`, requestOptions)\r\n    //         .then((response) => response.text())\r\n    //         .then(() => {\r\n\r\n    //         })\r\n    //         .catch((error) => {\r\n\r\n    //         });\r\n    //     }).catch(() => {\r\n\r\n    //     });\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"basic-form\">\r\n                  <form>\r\n                    <div className=\"form-group\">\r\n                      <label>Gmail Account</label>\r\n                      <input type=\"email\" className=\"form-control\" value={userInfo.userEmail} disabled />\r\n                    </div>\r\n                    <button type=\"button\" className=\"btn btn-default\" onClick={deactivateAccount}>Deactivate</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\nimport ApiCalendar from 'react-google-calendar-api'\r\nimport {\r\n  LocationOn,\r\n  Email\r\n} from '@material-ui/icons';\r\nimport Layout from '../components/Layout/Layout'\r\nimport { CalendarContext } from '../context/CalendarContext'\r\nimport config from '../utility/api'\r\nimport { IsArrayEmpty, IsEmpty } from '../utility/ToolFct'\r\n\r\nexport default function Profile() {\r\n  const { userInfo, calendarEvents } = useContext(CalendarContext)\r\n\r\n  useEffect(() => { })\r\n\r\n  const statusIcon = (status) => {\r\n    let classColor;\r\n    switch (status) {\r\n      case 'Open':\r\n        classColor = 'open';\r\n        break;\r\n      case 'In Progress':\r\n        classColor = 'Progress';\r\n        break;\r\n      case 'Cancelled':\r\n        classColor = 'Cancelled';\r\n        break;\r\n      case 'Confirmed':\r\n        classColor = 'Confirmed';\r\n        break;\r\n      default:\r\n        classColor = 'pink'\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={classColor}\r\n        style={{\r\n          background: classColor,\r\n          color: '#fff',\r\n          textAlign: 'center',\r\n          fontSize: 11,\r\n          width: 65,\r\n        }}\r\n      >\r\n        {status}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const deactivateAccount = () => {\r\n    localStorage.clear()\r\n    ApiCalendar.handleSignoutClick()\r\n    window.location.href = '/'\r\n  }\r\n\r\n  const deleteForm = (id, googleCalendarId) => {\r\n    // if (!IsEmpty(id) && !IsEmpty(googleCalendarId)) {\r\n    //   const requestOptions = {\r\n    //     method: 'DELETE',\r\n    //     redirect: 'follow'\r\n    //   };\r\n\r\n    //   ApiCalendar\r\n    //     .deleteEvent(googleCalendarId)\r\n    //     .then(() => {\r\n    //       fetch(`${config.api}appointments/${id}`, requestOptions)\r\n    //         .then((response) => response.text())\r\n    //         .then(() => {\r\n\r\n    //         })\r\n    //         .catch((error) => {\r\n\r\n    //         });\r\n    //     }).catch(() => {\r\n\r\n    //     });\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"user-profile text-center\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"user-photo m-b-30\">\r\n                        <img\r\n                          className=\"img-fluid\"\r\n                          style={{ width: 150 }}\r\n                          src={`${!IsEmpty(userInfo) && userInfo.userImg}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"user-profile-name\">{!IsEmpty(userInfo) && userInfo.userName}</div>\r\n                      <div className=\"user-job-title\">Instructor</div>\r\n                      <div className=\"user-job-title\">{!IsEmpty(userInfo) && userInfo.userEmail}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-9\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n                      <table className=\"table student-data-table m-t-20\" style={{ maxHeight: 150 }}>\r\n                        <thead>\r\n                          <h2 className=\"titleTableOpen\">Open</h2>\r\n                          <tr>\r\n                            <th>Status</th>\r\n                            <th>Title</th>\r\n                            <th>Date</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {\r\n                            !IsArrayEmpty(calendarEvents)\r\n                              ? calendarEvents.map((val) => {\r\n                                return (\r\n                                  val.apiData.status === 'Open'\r\n                                    ? (\r\n                                      <tr>\r\n                                        <td>\r\n                                          {statusIcon(val.apiData.status)}\r\n                                        </td>\r\n                                        <td><div className=\"text-ellipsis\" style={{ width: 100 }}>{val.apiData.title}</div></td>\r\n                                        <td>{val.apiData.date}</td>\r\n                                      </tr>\r\n                                    ) : ''\r\n                                )\r\n                              }) : (\r\n                                <tr>\r\n                                  <td className=\"text-center\" colSpan={2}>No data available.</td>\r\n                                </tr>\r\n                              )\r\n                          }\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n                      <table className=\"table student-data-table m-t-20\" style={{ maxHeight: 150 }}>\r\n                        <thead>\r\n                          <h2 className=\"titleTableInProgress\">In Progress</h2>\r\n                          <tr>\r\n                            <th>Status</th>\r\n                            <th>Title</th>\r\n                            <th>Date</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {\r\n                            !IsArrayEmpty(calendarEvents)\r\n                              ? calendarEvents.map((val) => {\r\n                                return (\r\n                                  val.apiData.status === 'In Progress'\r\n                                    ? (\r\n                                      <tr>\r\n                                        <td>\r\n                                          {statusIcon(val.apiData.status)}\r\n                                        </td>\r\n                                        <td><div className=\"text-ellipsis\" style={{ width: 100 }}>{val.apiData.title}</div></td>\r\n                                        <td>{val.apiData.date}</td>\r\n                                      </tr>\r\n                                    ) : ''\r\n                                )\r\n                              }) : (\r\n                                <tr>\r\n                                  <td className=\"text-center\" colSpan={2}>No data available.</td>\r\n                                </tr>\r\n                              )\r\n                          }\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n                      <table className=\"table student-data-table m-t-20\" style={{ maxHeight: 150 }}>\r\n                        <thead>\r\n                          <h2 className=\"titleTableCancelled\">Cancelled</h2>\r\n                          <tr>\r\n                            <th>Status</th>\r\n                            <th>Title</th>\r\n                            <th>Date</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {\r\n                            !IsArrayEmpty(calendarEvents)\r\n                              ? calendarEvents.map((val) => {\r\n                                return (\r\n                                  val.apiData.status === 'Cancelled'\r\n                                    ? (\r\n                                      <tr>\r\n                                        <td>\r\n                                          {statusIcon(val.apiData.status)}\r\n                                        </td>\r\n                                        <td><div className=\"text-ellipsis\" style={{ width: 100 }}>{val.apiData.title}</div></td>\r\n                                        <td>{val.apiData.date}</td>\r\n                                      </tr>\r\n                                    ) : ''\r\n                                )\r\n                              }) : (\r\n                                <tr>\r\n                                  <td className=\"text-center\" colSpan={2}>No data available.</td>\r\n                                </tr>\r\n                              )\r\n                          }\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"table-responsive\">\r\n                      <table className=\"table student-data-table m-t-20\" style={{ maxHeight: 150 }}>\r\n                        <thead>\r\n                          <h2 className=\"titleTableConfirmed\">Confirmed</h2>\r\n                          <tr>\r\n                            <th>Status</th>\r\n                            <th>Title</th>\r\n                            <th>Date</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {\r\n                            !IsArrayEmpty(calendarEvents)\r\n                              ? calendarEvents.map((val) => {\r\n                                return (\r\n                                  val.apiData.status === 'Confirmed'\r\n                                    ? (\r\n                                      <tr>\r\n                                        <td>\r\n                                          {statusIcon(val.apiData.status)}\r\n                                        </td>\r\n                                        <td><div className=\"text-ellipsis\" style={{ width: 100 }}>{val.apiData.title}</div></td>\r\n                                        <td>{val.apiData.date}</td>\r\n                                      </tr>\r\n                                    ) : ''\r\n                                )\r\n                              }) : (\r\n                                <tr>\r\n                                  <td className=\"text-center\" colSpan={2}>No data available.</td>\r\n                                </tr>\r\n                              )\r\n                          }\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n  Fragment\n} from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport './assets/lib/bootstrap.min.css';\nimport './assets/lib/sidebar.css';\nimport './assets/lib/style.css';\n\nimport './assets/main.scss';\nimport './assets/skeleton.css';\n\nimport 'react-datepicker/src/stylesheets/datepicker.scss'\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Calendar from './pages/Calendar';\nimport Users from './pages/Users';\nimport Settings from './pages/Settings';\nimport Profile from './pages/Profile';\n\nimport CalendarProvider, { CalendarContext } from './context/CalendarContext';\nimport AuthContextProvider, { AuthContext } from './context/AuthContext';\nimport { IsEmpty } from './utility/ToolFct';\n\nfunction App() {\n  return (\n    <AuthContextProvider>\n      <Router>\n        <CalendarProvider>\n          {/* <CalendarContext.Consumer>\n            {\n              (value) => {\n                return (\n                  IsEmpty(value.userInfo.userEmail) && <Redirect to=\"/\" />\n                )\n              }\n            }\n          </CalendarContext.Consumer> */}\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/calendar\" component={Calendar} />\n          <Route path=\"/user\" component={Users} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/settings\" component={Settings} />\n        </CalendarProvider>\n      </Router>\n    </AuthContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}